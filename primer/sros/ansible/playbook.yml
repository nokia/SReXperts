- name: Primer playbook
  connection: ansible.netcommon.netconf
  gather_facts: no
  hosts: all
  tasks:
  - name: "Get System Name"
    ansible.netcommon.netconf_get:
      filter: |
        <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf">
          <system>
            <name/>
          </system>
        </configure>
    register: get_result


  - name: "Output Result"
    debug:
      var: get_result


  - name: "Set System Name"
    ansible.netcommon.netconf_config:
      content: |
        <config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
          <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf">
            <system>
              <name>AnsibleName</name>
            </system>
          </configure>
        </config>


  - name: "Get System Name"
    ansible.netcommon.netconf_get:
      filter: |
        <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf">
          <system>
            <name/>
          </system>
        </configure>
    register: get_result


  - name: "Output Result"
    debug:
      var: get_result


  - name: "Collect MTU from interface"
    ansible.netcommon.netconf_get:
      filter: |
        <state xmlns="urn:nokia.com:sros:ns:yang:sr:state" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:nokia-attr="urn:nokia.com:sros:ns:yang:sr:attributes">
            <router>
                <router-name>Base</router-name>
                <interface>
                    <interface-name>pe1</interface-name>
                    <oper-ip-mtu/>
                </interface>
            </router>
        </state>
    register: get_result


  - name: "Change stdout to dict variable"
    set_fact:
      get_result_dict: "{{ get_result.stdout |ansible.utils.from_xml() }}"


  - name: "Print out the resulting dictionary"
    debug:
      var: get_result_dict


  - name: "Set MTU-description on interface"
    ansible.netcommon.netconf_config:
      content: |
        <config xmlns="urn:ietf:params:xml:ns:netconf:base:1.0">
            <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:nokia-attr="urn:nokia.com:sros:ns:yang:sr:attributes">
                <router>
                    <router-name>Base</router-name>
                    <interface>
                        <interface-name>pe1</interface-name>
                        <description>The MTU on this interface is {{get_result_dict["data"]["state"]["router"]["interface"]["oper-ip-mtu"]}}.</description>
                    </interface>
                </router>
            </configure>
        </config>


  - name: "Collect description from interface"
    ansible.netcommon.netconf_get:
      filter: |
        <configure xmlns="urn:nokia.com:sros:ns:yang:sr:conf" xmlns:nc="urn:ietf:params:xml:ns:netconf:base:1.0" xmlns:nokia-attr="urn:nokia.com:sros:ns:yang:sr:attributes">
            <router>
                <router-name>Base</router-name>
                <interface>
                    <interface-name>pe1</interface-name>
                    <description/>
                </interface>
            </router>
        </configure>
    register: get_result


  - name: "Output Result"
    debug:
      var: get_result